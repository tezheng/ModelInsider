{
  "model_path": "/mnt/d/BYOM/modelexport/examples/outputs/benchmark/Transformer-like_fx_graph.onnx",
  "export_method": "fx_graph",
  "hierarchy_mapping": {
    "x": "/Inputs/x",
    "getattr_1": "/Inputs/x",
    "getitem": "/Inputs/x",
    "getitem_1": "/Inputs/x",
    "getitem_2": "/Inputs/x",
    "query": "/SimpleTransformer/Linear",
    "key": "/SimpleTransformer/Linear",
    "value": "/SimpleTransformer/Linear",
    "view": "/Inputs/x/method_view",
    "view_1": "/Inputs/x/method_view",
    "view_2": "/Inputs/x/method_view",
    "transpose": "/Inputs/x/method_view/method_transpose",
    "transpose_1": "/Inputs/x/method_view/method_transpose",
    "transpose_2": "/Inputs/x/method_view/method_transpose",
    "transpose_3": "/Inputs/x/method_view/method_transpose/method_transpose",
    "matmul": "/Inputs/x/method_view/method_transpose",
    "getattr_2": "/Inputs/x/method_view/method_transpose",
    "tensor": "/Functions/tensor",
    "mul": "/Inputs/x/method_view/method_transpose",
    "softmax": "/Inputs/x/method_view/method_transpose",
    "matmul_1": "/Inputs/x/method_view/method_transpose",
    "transpose_4": "/Inputs/x/method_view/method_transpose/method_transpose",
    "contiguous": "/Inputs/x/method_view/method_transpose/method_transpose/method_contiguous",
    "view_3": "/Inputs/x/method_view",
    "output": "/SimpleTransformer/Linear",
    "add": "/Inputs/x",
    "norm": "/SimpleTransformer/LayerNorm",
    "ffn_0": "/SimpleTransformer/Sequential.0",
    "ffn_2": "/SimpleTransformer/Sequential.2",
    "add_1": "/SimpleTransformer/LayerNorm",
    "norm_1": "/SimpleTransformer/LayerNorm",
    "output_1": "/SimpleTransformer/LayerNorm/Output"
  },
  "module_mapping": {
    "/Inputs/x": [
      "x",
      "getattr_1",
      "getitem",
      "getitem_1",
      "getitem_2",
      "add"
    ],
    "/SimpleTransformer/Linear": [
      "query",
      "key",
      "value",
      "output"
    ],
    "/Inputs/x/method_view": [
      "view",
      "view_1",
      "view_2",
      "view_3"
    ],
    "/Inputs/x/method_view/method_transpose": [
      "transpose",
      "transpose_1",
      "transpose_2",
      "matmul",
      "getattr_2",
      "mul",
      "softmax",
      "matmul_1"
    ],
    "/Inputs/x/method_view/method_transpose/method_transpose": [
      "transpose_3",
      "transpose_4"
    ],
    "/Functions/tensor": [
      "tensor"
    ],
    "/Inputs/x/method_view/method_transpose/method_transpose/method_contiguous": [
      "contiguous"
    ],
    "/SimpleTransformer/LayerNorm": [
      "norm",
      "add_1",
      "norm_1"
    ],
    "/SimpleTransformer/Sequential.0": [
      "ffn_0"
    ],
    "/SimpleTransformer/Sequential.2": [
      "ffn_2"
    ],
    "/SimpleTransformer/LayerNorm/Output": [
      "output_1"
    ]
  },
  "instance_mapping": {
    "query": "/SimpleTransformer/Linear",
    "key": "/SimpleTransformer/Linear",
    "value": "/SimpleTransformer/Linear",
    "output": "/SimpleTransformer/Linear",
    "norm": "/SimpleTransformer/LayerNorm",
    "ffn.0": "/SimpleTransformer/Sequential.0",
    "ffn.2": "/SimpleTransformer/Sequential.2"
  },
  "statistics": {
    "total_fx_nodes": 33,
    "hierarchy_nodes": 32,
    "unique_hierarchy_paths": 11,
    "coverage_ratio": 0.9696969696969697,
    "coverage_percentage": "97.0%",
    "node_type_distribution": {
      "placeholder": 1,
      "call_function": 12,
      "call_module": 9,
      "call_method": 10,
      "output": 1
    },
    "confidence_distribution": {
      "high": 19,
      "medium": 11,
      "low": 2
    },
    "module_types_found": {
      "Linear": 6,
      "LayerNorm": 2,
      "ReLU": 1
    },
    "fx_analysis_method": "comprehensive_coverage",
    "hierarchy_categories": {
      "torch_modules": 2,
      "functions": 1,
      "methods": 4,
      "attributes": 0,
      "inputs": 1,
      "outputs": 1,
      "custom_modules": 2
    }
  },
  "torch_nn_exceptions": [
    "Conv2d",
    "BatchNorm1d",
    "Conv3d",
    "Conv1d",
    "InstanceNorm1d",
    "BatchNorm3d",
    "MultiheadAttention",
    "Dropout",
    "InstanceNorm3d",
    "InstanceNorm2d",
    "Linear",
    "LayerNorm",
    "Embedding",
    "BatchNorm2d",
    "GroupNorm"
  ]
}