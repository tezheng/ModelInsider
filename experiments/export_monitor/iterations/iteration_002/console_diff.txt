--- baseline
+++ iteration_2
@@ -1,164 +1,156 @@
-🔄 Loading model and exporting: prajjwal1/bert-tiny
-🧠 Using HTP (Hierarchical Trace-and-Project) strategy
-Auto-loading model from: prajjwal1/bert-tiny
-Successfully loaded BertModel
-Starting HTP export for BertModel
 
 ================================================================================
-📋 STEP 1/8: MODEL PREPARATION
+📋 STEP [1;36m1[0m/[1;36m8[0m: MODEL PREPARATION
 ================================================================================
-✅ Model loaded: BertModel (48 modules, 4.4M parameters)
-🎯 Export target: temp/old_output.onnx
-⚙️ Strategy: HTP (Hierarchy-Preserving)
+✅ Model loaded: BertModel [1m([0m[1;36m48[0m modules, [1;36m4.[0m4M parameters[1m)[0m
+🎯 Export target: 
+[35m/home/zhengte/modelexport_allmodels/experiments/export_monitor/iterations/iterat[0m
+[35mion_002/[0m[95mmodel.onnx[0m
+⚙️ Strategy: HTP [1m([0mHierarchy-Preserving[1m)[0m
+✅ Hierarchy attributes will be embedded in ONNX
 ✅ Model set to evaluation mode
 
 ================================================================================
-🔧 STEP 2/8: INPUT GENERATION & VALIDATION
+📋 STEP [1;36m2[0m/[1;36m8[0m: INPUT GENERATION & VALIDATION
 ================================================================================
 🤖 Auto-generating inputs for: prajjwal1/bert-tiny
    • Model type: bert
-   • Auto-detected task: feature-extraction
+   • Task: feature-extraction
 ✅ Created onnx export config for bert with task feature-extraction
-🔧 Generated 3 input tensors:
-   • input_ids: [2, 16] (torch.int64)
-   • attention_mask: [2, 16] (torch.int64)
-   • token_type_ids: [2, 16] (torch.int64)
+🔧 Generated [1;36m3[0m input tensors:
+   • input_ids: [1m[[0m[1;36m2[0m, [1;36m16[0m[1m][0m [1m([0mtorch.int64[1m)[0m
+   • attention_mask: [1m[[0m[1;36m2[0m, [1;36m16[0m[1m][0m [1m([0mtorch.int64[1m)[0m
+   • token_type_ids: [1m[[0m[1;36m2[0m, [1;36m16[0m[1m][0m [1m([0mtorch.int64[1m)[0m
 
 ================================================================================
-🏗️ STEP 3/8: HIERARCHY BUILDING
+📋 STEP [1;36m3[0m/[1;36m8[0m: HIERARCHY BUILDING
 ================================================================================
 ✅ Hierarchy building completed with TracingHierarchyBuilder
-📈 Traced 18 modules
-🔄 Execution steps: 36
+📈 Traced [1;36m18[0m modules
+🔄 Execution steps: [1;36m18[0m
 
 🌳 Module Hierarchy:
 ------------------------------------------------------------
 BertModel
 ├── BertEmbeddings: embeddings
 ├── BertEncoder: encoder
-│   ├── BertLayer: encoder.layer.0
-│   │   ├── BertAttention: encoder.layer.0.attention
-│   │   │   ├── BertSdpaSelfAttention: encoder.layer.0.attention.self
-│   │   │   └── BertSelfOutput: encoder.layer.0.attention.output
-│   │   ├── BertIntermediate: encoder.layer.0.intermediate
-│   │   │   └── GELUActivation: encoder.layer.0.intermediate.intermediate_act_fn
-│   │   └── BertOutput: encoder.layer.0.output
-│   └── BertLayer: encoder.layer.1
-│       ├── BertAttention: encoder.layer.1.attention
-│       │   ├── BertSdpaSelfAttention: encoder.layer.1.attention.self
-│       │   └── BertSelfOutput: encoder.layer.1.attention.output
-│       ├── BertIntermediate: encoder.layer.1.intermediate
-│       │   └── GELUActivation: encoder.layer.1.intermediate.intermediate_act_fn
-│       └── BertOutput: encoder.layer.1.output
+│   ├── BertLayer: layer.[1;36m0[0m
+│   │   ├── BertAttention: attention
+│   │   │   ├── BertSelfOutput: output
+│   │   │   └── BertSdpaSelfAttention: self
+│   │   ├── BertIntermediate: intermediate
+│   │   │   └── GELUActivation: intermediate_act_fn
+│   │   └── BertOutput: output
+│   └── BertLayer: layer.[1;36m1[0m
+│       ├── BertAttention: attention
+│       │   ├── BertSelfOutput: output
+│       │   └── BertSdpaSelfAttention: self
+│       ├── BertIntermediate: intermediate
+│       │   └── GELUActivation: intermediate_act_fn
+│       └── BertOutput: output
 └── BertPooler: pooler
+[1m([0mshowing [1;36m18[0m/[1;36m18[0m lines[1m)[0m
 
 ================================================================================
-📦 STEP 4/8: ONNX EXPORT
+📋 STEP [1;36m4[0m/[1;36m8[0m: ONNX EXPORT
 ================================================================================
-🎯 Target file: temp/old_output.onnx
+🎯 Export target: 
+[35m/home/zhengte/modelexport_allmodels/experiments/export_monitor/iterations/iterat[0m
+[35mion_002/[0m[95mmodel.onnx[0m
 ⚙️ Export config:
-   • opset_version: 17
-   • do_constant_folding: True
-   • verbose: False
-   • input_names: ['input_ids', 'attention_mask', 'token_type_ids']
+   • opset_version: [1;36m17[0m
+   • do_constant_folding: [3;92mTrue[0m
+   • verbose: [3;91mFalse[0m
+   • input_names: [1m[[0m[32m'input_ids'[0m, [32m'attention_mask'[0m, [32m'token_type_ids'[0m[1m][0m
 ✅ ONNX export completed successfully
 
 ================================================================================
-🏷️ STEP 5/8: NODE TAGGER CREATION
+📋 STEP [1;36m5[0m/[1;36m8[0m: NODE TAGGER CREATION
 ================================================================================
 ✅ Node tagger created successfully
-🏷️ Model root tag: /BertModel
+🏷️ Model root tag: [35m/[0m[95mBertModel[0m
 🔧 Operation fallback: disabled
 
 ================================================================================
-🔗 STEP 6/8: ONNX NODE TAGGING
+📋 STEP [1;36m6[0m/[1;36m8[0m: ONNX NODE TAGGING
 ================================================================================
 ✅ Node tagging completed successfully
-📈 Coverage: 100.0%
-📊 Tagged nodes: 136/136
-   • Direct matches: 83 (61.0%)
-   • Parent matches: 34 (25.0%)
-   • Root fallbacks: 19 (14.0%)
-✅ Empty tags: 0
+📈 Coverage: [1;36m71.3[0m%
+📊 Tagged nodes: [1;36m97[0m/[1;36m136[0m
+   • Direct matches: [1;36m83[0m [1m([0m[1;36m61.0[0m%[1m)[0m
+   • Parent matches: [1;36m34[0m [1m([0m[1;36m25.0[0m%[1m)[0m
+   • Root fallbacks: [1;36m19[0m [1m([0m[1;36m14.0[0m%[1m)[0m
+✅ Empty tags: [1;36m0[0m
 
-📊 Top 20 Nodes by Hierarchy:
+📊 Top [1;36m4[0m Nodes by Hierarchy:
 ------------------------------
- 1. /BertModel/BertEncoder/BertLayer.0/BertAttention/BertSdpaSelfAttention: 35 nodes
- 2. /BertModel/BertEncoder/BertLayer.1/BertAttention/BertSdpaSelfAttention: 35 nodes
- 3. /BertModel: 19 nodes
- 4. /BertModel/BertEmbeddings: 8 nodes
- 5. /BertModel/BertEncoder/BertLayer.0/BertIntermediate/GELUActivation: 8 nodes
- 6. /BertModel/BertEncoder/BertLayer.1/BertIntermediate/GELUActivation: 8 nodes
- 7. /BertModel/BertEncoder/BertLayer.0/BertAttention/BertSelfOutput: 4 nodes
- 8. /BertModel/BertEncoder/BertLayer.0/BertOutput: 4 nodes
- 9. /BertModel/BertEncoder/BertLayer.1/BertAttention/BertSelfOutput: 4 nodes
-10. /BertModel/BertEncoder/BertLayer.1/BertOutput: 4 nodes
-11. /BertModel/BertPooler: 3 nodes
-12. /BertModel/BertEncoder/BertLayer.0/BertIntermediate: 2 nodes
-13. /BertModel/BertEncoder/BertLayer.1/BertIntermediate: 2 nodes
+ [1;36m1[0m. [35m/BertModel/BertEncoder/BertLayer.0/BertAttention/[0m[95mBertSdpaSelfAttention[0m: [1;36m35[0m 
+nodes
+ [1;36m2[0m. [35m/BertModel/BertEncoder/BertLayer.1/BertAttention/[0m[95mBertSdpaSelfAttention[0m: [1;36m35[0m 
+nodes
+ [1;36m3[0m. [35m/[0m[95mBertModel[0m: [1;36m19[0m nodes
+ [1;36m4[0m. [35m/BertModel/[0m[95mBertEmbeddings[0m: [1;36m8[0m nodes
 
 🌳 Complete HF Hierarchy with ONNX Nodes:
 ------------------------------------------------------------
-BertModel (136 ONNX nodes)
-├── BertEmbeddings: embeddings (8 nodes)
-│   ├── Add (2 ops)
-│   ├── Constant (2 ops)
-│   ├── Gather (3 ops)
-│   └── LayerNormalization: /embeddings/LayerNorm/LayerNormalization
-├── BertEncoder: encoder (106 nodes)
-│   ├── BertLayer: encoder.layer.0 (53 nodes)
-│   │   ├── BertAttention: encoder.layer.0.attention (39 nodes)
-│   │   │   ├── BertSdpaSelfAttention: encoder.layer.0.attention.self (35 nodes)
-│   │   │   │   ├── Add (4 ops)
-│   │   │   │   ├── Cast (2 ops)
-│   │   │   │   ├── Constant (7 ops)
-│   │   │   │   ├── Div: /encoder/layer.0/attention/self/Div
-│   │   │   │   ├── MatMul (5 ops)
-│   │   │   │   ├── Mul (2 ops)
-│   │   │   │   ├── Reshape (4 ops)
-│   │   │   │   ├── Shape: /encoder/layer.0/attention/self/Shape
-│   │   │   │   ├── Slice: /encoder/layer.0/attention/self/Slice
-│   │   │   │   ├── Softmax: /encoder/layer.0/attention/self/Softmax
-│   │   │   │   ├── Sqrt (3 ops)
-│   │   │   │   └── Transpose (4 ops)
-│   │   │   └── BertSelfOutput: encoder.layer.0.attention.output (4 nodes)
-│   │   │       ├── Add (2 ops)
-│   │   │       ├── LayerNormalization: 
-│   │   │       │   /encoder/layer.0/attention/output/LayerNorm/LayerNormalizati
-│   │   │       │   on
-│   │   │       └── MatMul: /encoder/layer.0/attention/output/dense/MatMul
-│   │   ├── BertIntermediate: encoder.layer.0.intermediate (10 nodes)
-│   │   │   ├── Add: /encoder/layer.0/intermediate/dense/Add
-... and 53 more lines (truncated for console)
-(showing 30/83 lines)
+BertModel [1m([0m[1;36m136[0m ONNX nodes[1m)[0m
+├── BertEmbeddings: embeddings [1m([0m[1;36m8[0m nodes[1m)[0m
+│   ├── [35m/embeddings/[0m[95mnode[0m [1m([0m[1;36m8[0m ops[1m)[0m
+├── BertEncoder: encoder [1m([0m[1;36m0[0m nodes[1m)[0m
+│   ├── BertLayer: layer.[1;36m0[0m [1m([0m[1;36m0[0m nodes[1m)[0m
+│   │   ├── BertAttention: attention [1m([0m[1;36m0[0m nodes[1m)[0m
+│   │   │   ├── BertSelfOutput: output [1m([0m[1;36m0[0m nodes[1m)[0m
+│   │   │   ├── BertSdpaSelfAttention: self [1m([0m[1;36m35[0m nodes[1m)[0m
+│   │   ├── BertIntermediate: intermediate [1m([0m[1;36m0[0m nodes[1m)[0m
+│   │   │   ├── GELUActivation: intermediate_act_fn [1m([0m[1;36m0[0m nodes[1m)[0m
+│   │   ├── BertOutput: output [1m([0m[1;36m0[0m nodes[1m)[0m
+│   ├── BertLayer: layer.[1;36m1[0m [1m([0m[1;36m0[0m nodes[1m)[0m
+│   │   ├── BertAttention: attention [1m([0m[1;36m0[0m nodes[1m)[0m
+│   │   │   ├── BertSelfOutput: output [1m([0m[1;36m0[0m nodes[1m)[0m
+│   │   │   ├── BertSdpaSelfAttention: self [1m([0m[1;36m35[0m nodes[1m)[0m
+│   │   ├── BertIntermediate: intermediate [1m([0m[1;36m0[0m nodes[1m)[0m
+│   │   │   ├── GELUActivation: intermediate_act_fn [1m([0m[1;36m0[0m nodes[1m)[0m
+│   │   ├── BertOutput: output [1m([0m[1;36m0[0m nodes[1m)[0m
+├── BertPooler: pooler [1m([0m[1;36m0[0m nodes[1m)[0m
+[33m...[0m and [1;36m117[0m more lines [1m([0mtruncated for console[1m)[0m
+[1m([0mshowing [1;36m19[0m/[1;36m136[0m lines[1m)[0m
 
 ================================================================================
-🏷️ STEP 7/8: TAG INJECTION
+📋 STEP [1;36m7[0m/[1;36m8[0m: TAG INJECTION
 ================================================================================
 🏷️ Hierarchy tag attributes: enabled
 ✅ Tags injected into ONNX model successfully
-📄 Updated ONNX file: temp/old_output.onnx
+📄 Updated ONNX file: 
+[35m/home/zhengte/modelexport_allmodels/experiments/export_monitor/iterations/iterat[0m
+[35mion_002/[0m[95mmodel.onnx[0m
 
 ================================================================================
-📄 STEP 8/8: METADATA GENERATION
+📋 STEP [1;36m8[0m/[1;36m8[0m: METADATA GENERATION
 ================================================================================
 ✅ Metadata file created successfully
-📄 Metadata file: temp/old_output_htp_metadata.json
+📄 Metadata file: 
+[35m/home/zhengte/modelexport_allmodels/experiments/export_monitor/iterations/iterat[0m
+[35mion_002/[0m[95mmodel_htp_metadata.json[0m
 
 ================================================================================
-📋 FINAL EXPORT SUMMARY
+FINAL EXPORT SUMMARY
 ================================================================================
-🎉 HTP Export completed successfully in 4.19s!
+🎉 HTP Export completed successfully in [1;36m0.[0m02s!
 📊 Export Statistics:
-   • Export time: 4.19s
-   • Hierarchy modules: 18
-   • ONNX nodes: 136
-   • Tagged nodes: 136
-   • Coverage: 100.0%
-   • Empty tags: 0 ✅
+   • Export time: [1;36m0.[0m02s
+   • Hierarchy modules: [1;36m18[0m
+   • ONNX nodes: [1;36m136[0m
+   • Tagged nodes: [1;36m97[0m
+   • Coverage: [1;36m71.3[0m%
+   • Empty tags: [1;36m0[0m ✅
 
 📁 Output Files:
-   • ONNX model: temp/old_output.onnx
-   • Metadata: temp/old_output_htp_metadata.json
-   • Report: disabled
-
+   • ONNX model: 
+[35m/home/zhengte/modelexport_allmodels/experiments/export_monitor/iterations/iterat[0m
+[35mion_002/[0m[95mmodel.onnx[0m
+   • Metadata: 
+[35m/home/zhengte/modelexport_allmodels/experiments/export_monitor/iterations/iterat[0m
+[35mion_002/[0m[95mmodel_htp_metadata.json[0m
+   • Report: 
+[35m/home/zhengte/modelexport_allmodels/experiments/export_monitor/iterations/iterat[0m
+[35mion_002/[0m[95mmodel_full_report.txt[0m