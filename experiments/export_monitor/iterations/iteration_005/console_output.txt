
================================================================================
📋 STEP 1/8: MODEL PREPARATION
================================================================================
✅ Model loaded: BertModel (48 modules, 4.4M parameters)
🎯 Export target: /home/zhengte/modelexport_allmodels/experiments/export_monitor/iterations/iteration_005/model.onnx
⚙️ Strategy: HTP (Hierarchy-Preserving)
✅ Hierarchy attributes will be embedded in ONNX
✅ Model set to evaluation mode

================================================================================
🔧 STEP 2/8: INPUT GENERATION & VALIDATION
================================================================================
🤖 Auto-generating inputs for: prajjwal1/bert-tiny
   • Model type: bert
   • Auto-detected task: feature-extraction
✅ Created onnx export config for bert with task feature-extraction
🔧 Generated 2 input tensors:
   • input_ids: torch.Size([1, 128]) (torch.int64)
   • attention_mask: torch.Size([1, 128]) (torch.int64)

================================================================================
🏗️ STEP 3/8: HIERARCHY BUILDING
================================================================================
✅ Hierarchy building completed with TracingHierarchyBuilder
📈 Traced 18 modules
🔄 Execution steps: 36

🌳 Module Hierarchy:
------------------------------------------------------------
BertModel
├── BertEmbeddings: embeddings
├── BertEncoder: encoder
│   ├── BertLayer: encoder.layer.0
│   │   ├── BertAttention: encoder.layer.0.attention
│   │   │   ├── BertSelfOutput: encoder.layer.0.attention.output
│   │   │   └── BertSdpaSelfAttention: encoder.layer.0.attention.self
│   │   ├── BertIntermediate: encoder.layer.0.intermediate
│   │   │   └── GELUActivation: encoder.layer.0.intermediate.intermediate_act_fn
│   │   └── BertOutput: encoder.layer.0.output
│   └── BertLayer: encoder.layer.1
│       ├── BertAttention: encoder.layer.1.attention
│       │   ├── BertSelfOutput: encoder.layer.1.attention.output
│       │   └── BertSdpaSelfAttention: encoder.layer.1.attention.self
│       ├── BertIntermediate: encoder.layer.1.intermediate
│       │   └── GELUActivation: encoder.layer.1.intermediate.intermediate_act_fn
│       └── BertOutput: encoder.layer.1.output
└── BertPooler: pooler

================================================================================
📦 STEP 4/8: ONNX EXPORT
================================================================================
🎯 Target file: /home/zhengte/modelexport_allmodels/experiments/export_monitor/iterations/iteration_005/model.onnx
⚙️ Export config:
   • opset_version: 17
   • do_constant_folding: True
   • verbose: False
✅ ONNX export completed successfully

================================================================================
🏷️ STEP 5/8: NODE TAGGER CREATION
================================================================================
✅ Node tagger created successfully
🏷️ Model root tag: /BertModel
🔧 Operation fallback: disabled

================================================================================
🔗 STEP 6/8: ONNX NODE TAGGING
================================================================================
✅ Node tagging completed successfully
📈 Coverage: 100.0%
📊 Tagged nodes: 136/136
   • Direct matches: 83 (61.0%)
   • Parent matches: 34 (25.0%)
   • Root fallbacks: 19 (14.0%)
✅ Empty tags: 0

📊 Top 20 Nodes by Hierarchy:
------------------------------
 1. /BertModel/BertEncoder/BertLayer.0/BertAttention/BertSdpaSelfAttention: 35 nodes
 2. /BertModel/BertEncoder/BertLayer.1/BertAttention/BertSdpaSelfAttention: 35 nodes
 3. /BertModel: 19 nodes
 4. /BertModel/BertEncoder/BertLayer.0/BertIntermediate: 10 nodes
 5. /BertModel/BertEncoder/BertLayer.1/BertIntermediate: 10 nodes
 6. /BertModel/BertEmbeddings: 8 nodes
 7. /BertModel/BertEncoder/BertLayer.0/BertAttention/BertSelfOutput: 4 nodes
 8. /BertModel/BertEncoder/BertLayer.1/BertAttention/BertSelfOutput: 4 nodes
 9. /BertModel/BertEncoder/BertLayer.0/BertOutput: 4 nodes
10. /BertModel/BertEncoder/BertLayer.1/BertOutput: 4 nodes
11. /BertModel/BertPooler: 3 nodes

🌳 Complete HF Hierarchy with ONNX Nodes:
------------------------------------------------------------
BertModel (136 ONNX nodes)
├── BertEmbeddings: embeddings (8 nodes)
│   └── node (8 ops)
├── BertEncoder: encoder (0 nodes)
│   ├── BertLayer: encoder.layer.0 (0 nodes)
│   │   ├── BertAttention: encoder.layer.0.attention (0 nodes)
│   │   │   ├── BertSelfOutput: encoder.layer.0.attention.output (4 nodes)
│   │   │   └── BertSdpaSelfAttention: encoder.layer.0.attention.self (35 nodes)
│   │   ├── BertIntermediate: encoder.layer.0.intermediate (10 nodes)
│   │   │   └── node (10 ops)
│   │   │   └── GELUActivation: encoder.layer.0.intermediate.intermediate_act_fn (0 nodes)
│   │   └── BertOutput: encoder.layer.0.output (4 nodes)
│   │       └── node (4 ops)
│   └── BertLayer: encoder.layer.1 (0 nodes)
│       ├── BertAttention: encoder.layer.1.attention (0 nodes)
│       │   ├── BertSelfOutput: encoder.layer.1.attention.output (4 nodes)
│       │   └── BertSdpaSelfAttention: encoder.layer.1.attention.self (35 nodes)
│       ├── BertIntermediate: encoder.layer.1.intermediate (10 nodes)
│       │   └── node (10 ops)
│       │   └── GELUActivation: encoder.layer.1.intermediate.intermediate_act_fn (0 nodes)
│       └── BertOutput: encoder.layer.1.output (4 nodes)
│           └── node (4 ops)
└── BertPooler: pooler (3 nodes)
    └── node (3 ops)
(showing 23/135 lines)

================================================================================
🏷️ STEP 7/8: TAG INJECTION
================================================================================
🏷️ Hierarchy tag attributes: enabled
✅ Tags injected into ONNX model successfully
📄 Updated ONNX file: /home/zhengte/modelexport_allmodels/experiments/export_monitor/iterations/iteration_005/model.onnx

================================================================================
📄 STEP 8/8: METADATA GENERATION
================================================================================
✅ Metadata file created successfully
📄 Metadata file: /home/zhengte/modelexport_allmodels/experiments/export_monitor/iterations/iteration_005/model_htp_metadata.json

================================================================================
📋 FINAL EXPORT SUMMARY
================================================================================
🎉 HTP Export completed successfully in 0.02s!
📊 Export Statistics:
   • Export time: 0.02s
   • Hierarchy modules: 18
   • ONNX nodes: 136
   • Tagged nodes: 136
   • Coverage: 100.0%
   • Empty tags: 0 ✅

📁 Output Files:
   • ONNX model: /home/zhengte/modelexport_allmodels/experiments/export_monitor/iterations/iteration_005/model.onnx
   • Metadata: /home/zhengte/modelexport_allmodels/experiments/export_monitor/iterations/iteration_005/model_htp_metadata.json
   • Report: /home/zhengte/modelexport_allmodels/experiments/export_monitor/iterations/iteration_005/model_full_report.txt
